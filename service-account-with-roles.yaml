apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-service-account
---
apiVersion: v1
kind: Pod
metadata:
  name: test-service-account
spec:
  serviceAccountName: test-service-account
  containers:
    - name: n1
      image: gayatrisa/ubuntu:trusty-utils
      command: ["/bin/bash"]
      args:
        - "-c"
        - >
          while true; do
            echo "Keep Alive!";
            sleep 10;
          done
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: list-pods
  namespace: default
rules:
   - apiGroups: [""]
     resources: ["pods"]
     verbs: ["list"]
     #resourceNames: [] # You can target a resource by the name too. For example resources: ["pods"], resourceNames: ["pod-1", "pod-2"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: list-pods_demo-sa
  namespace: default
subjects:
# You can specify more than one "subject"
- kind: ServiceAccount
  name: test-service-account
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: list-pods # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: ""
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: list-pv
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tes-sa-list-pv
subjects:
  - kind: ServiceAccount
    name: test-service-account
    namespace: default # namespace of the subject is mandatory for clusterrolebinding
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: list-pv
  apiGroup: ""
